# git win64 
https://github.com/git-for-windows/git/releases/download/v2.14.1.windows.1/Git-2.14.1-64-bit.exe
https://git-scm.com/downloads/win/Git-2.47.0.2-64-bit.exe

# git commands
git clone https://github.com/dawabala/gvim_csh
git checkout main -- README.md
gvim README.md
git status
git add README.md; # git add .
git commit -m "update README.md"
git push origin main
# sync & merge
git fetch;
git pull;
# undo add & commit;
git reset <filename>
git reset;
# discard changes, revert to last commit;
git restore *;
# revert/restore a file  to old version
git log --oneline;  # d268f6e add Linux.txt, add orthodox gvim;
git checkout d268f6e dumptb.py
git status
git add dumptb.py monokai.vim q13_tb.v
git commit -m "restore dumptb.py, add chatgpt into q13_tb.v, add monokai.vim"
git push origin main


#### Linux image viewer
csh> display
csh> eog; # dconf Error, no write permission;

#### wget  xargs urls
cat url-list.txt | xargs wget â€“c

#### exec/xargs
find ./*[2-4][0-9]* -name '*pdf' -exec cp {} pdfs \;
find ./*[0-1][0-9]* -name '*pdf' | xargs -i cp {} pdfs
find ./*11* -iname '*PDF' -exec md5sum {} \;


#### awk=a+w+k, sed=super editor;
awk -F, '{print $2}' pdbooks.txt;
awk '{print $2 $N3}' df_mid_features.vh | sed 's/$2/$d/g' rtl_df_mid_tdatq13_noparams.v
sed 's/abc/xyz/g' pdbooks.txt;
set -i 's/abc/xyz/g' pdbooks.txt; # replace inplace, no bak file;

# awk:  column 3-10 same as colum 14-21 ?  if the same, print line;
awk '$3$4$5==$14$15$16' <file_name>


# mid.h: "parameter WIDTH=16," mapping.txt: "WIDTH 16"  tdatq13.v: "[WIDTH-1:0] queue;" changed into [16-1:0] queue";    
foreach line ( `cat mapping.txt` )
    set key   = `echo $line | awk '{print $1}'`
    set value = `echo $line | awk '{print $2}'`
    sed -i "s/\b$key\b/$value/g" rtl_df_mid_tdatq13_noparams.v
end

#### foreach
# foreach(linux), for(win)
 win: for %%file in * do ...  
 linux: foreach i in *
           do 

# chmod: recursively set dir/file access mot as 755/644 for website security;
find /path -type f -exec chmod 644 {} \;
find /path -type d -exec chmod 755 {} \;


#### get list of unique imported java packages 
grep '^import ' *.java | sed -e 's/.*import *//' -e 's/;.*$//' | sort -u > list

#### sort
# search & sort files by modification date
find . -type f -printf '%T@ %p\n' | sort -n | cut -d' ' -f2-
foreach file (`find .  -type f -printf '%T@ %p\n' | sort -n | cut -d' ' -f2-`)
        set mod_date = `date -r "$file" +"%Y-%m-%d"`

# Files are copied from the source directory ($1) to the destination directory ($2).  Any differences, such as new or modified files, are updated in the destination.
# -a: archive, -v: verbose --delete: if source file removed, destination file also be removed.
echo "Syncing $1 to $2"
rsync -avh --delete "$1" "$2"

find "$1" -type f -printf '%T@ %p\n' | sort -n | tail -1

#
sort -k1.4 -n f.txt

#### emacs
sorting lines
emacs: M-x sort-lines

#### ETX
#  mouse do not respond properly : suspend xfce_nveu; start fvwm_nveu, terminate  fvwm_nveu; reload xfce_nveu;

#### nfs lsof
fuser -v .nfs000000 
lsof .nfs0000000057
kill/bkill <PID>

#### ps 
ps --help all | grep id
ps -p 5888 -all
ps -p 5888 -l
ps -p 5888 -detail
ps -f -p 35389 -p 35471
ps -f -p 35389 -p 35471 -p 35562 -p 35563 -u
ps -u zhzhongl | grep vov

####
